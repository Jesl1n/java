package Training;

import java.util.HashMap;
import java.util.Map;

public class IsBalanced {
	// ()()()))
	static boolean checkbalanced(String str) {
		char arr[] = str.toCharArray();
		char stack[] = new char[arr.length];
		int fill = -1;
		if (arr.length >= 1) {
			if (arr[0] == ')' || arr[0] == ']' || arr[0] == '}') {
				return false;
			}
			for (int i = 0; i < arr.length; i++) {
				if (arr[i] == '(' || arr[i] == '[' || arr[i] == '{') {
					fill = fill + 1;
					stack[fill] = arr[i];
				}
				if (fill == -1) {
					return false;
				}
				if ((arr[i] == ')' && stack[fill] == '(') || (arr[i] == ']' && stack[fill] == '[')
						|| (arr[i] == '}' && stack[fill] == '{')) {
					fill = fill - 1;
				}

			}
		}
		return fill < 0;

	}

	public static void main(String[] args) {
		// checkbalanced("(()())");
		// checkbalanced("({()})");
		// checkbalanced("(([]{}))");
		// checkbalanced("([{}])");
		// checkbalanced("((]]})");
		// checkbalanced("((()()))");
		// checkbalanced("(((())))");
		// checkbalanced("](");
		Map<String, Boolean> testCases = new HashMap<String, Boolean>();

		// Populate test cases
		testCases.put("()", true);
		testCases.put("()()()", true);
		testCases.put("((()))", true);
		testCases.put("(()())", true);
		testCases.put("(()()())", true);
		testCases.put("((()()))", true);
		testCases.put("(((())))", true);
		testCases.put("(", false);
		testCases.put(")", false);
		testCases.put("((())", false);
		testCases.put("()(()", false);
		testCases.put("()()()))", false);
		testCases.put("", true);
		testCases.put("()()()()()", true);
		testCases.put("(((((((((())))))))))", true);
		testCases.put("))(", false);
		testCases.put("()", true);
		testCases.put("[]", true);
		testCases.put("{}", true);
		testCases.put("()[]{}", true);
		testCases.put("[()]", true);
		testCases.put("{[]}", true);
		testCases.put("[{()}]", true);
		testCases.put("[(){}]", true);
		testCases.put("({[]})", true);
		testCases.put("(", false);
		testCases.put(")", false);
		testCases.put("[", false);
		testCases.put("]", false);
		testCases.put("{", false);
		testCases.put("}", false);
		testCases.put("([)]", false);
		testCases.put("{[()]}", true);
		testCases.put("[{(())}]", true);
		testCases.put("()([]{})", true);
		testCases.put("[()[{}]]", true);
		testCases.put("((())", false);
		testCases.put("((){}", false);
		testCases.put("(()[)", false);
		testCases.put("(([])", false);
		testCases.put("(({})", false);
		testCases.put("", true);
		testCases.put("()()()()()", true);
		testCases.put("[[[[[[[[[[()]]]]]]]]]]", true);
		testCases.put("{(((((((((())))))))))}", true);
		testCases.put("][", false);
		testCases.put(")(", false);
		testCases.put("{{{{{{{{{{{{}}}}}}}}}}}}", true);

		for (String input : testCases.keySet()) {
			boolean expected = testCases.get(input);
			try {
				boolean actual = checkbalanced(input);
				System.out.println("Input: " + input + ", Expected: " + expected + ", Actual: " + actual);

			} catch (Exception e) {
				System.out.println("exception Jeslin" + input);
			}
		}

	}

}
